pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
        REQUIREMENTS = fileExists('messaging_app/requirements.txt') ? 'messaging_app/requirements.txt' : 'messaging_app/Requirements.txt'
    }

    tools {
        python 'Python3' // Define this in Jenkins Global Tool Config
    }

    stages {
        stage('Checkout Code') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/YOUR_USERNAME/alx-backend-python.git'
            }
        }

        stage('Set Up Python Environment') {
            steps {
                dir('messaging_app') {
                    sh 'python3 -m venv $VENV_DIR'
                    sh './$VENV_DIR/bin/pip install --upgrade pip'
                    sh "./$VENV_DIR/bin/pip install -r $REQUIREMENTS"
                    sh './$VENV_DIR/bin/pip install pytest pytest-django pytest-cov'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    sh './$VENV_DIR/bin/pytest chats/tests.py --junitxml=report.xml'
                }
            }
        }

        stage('Publish Test Results') {
            steps {
                junit 'messaging_app/report.xml'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'messaging_app/report.xml', allowEmptyArchive: true
        }

        failure {
            mail to: 'hunter@example.com',
                 subject: 'Jenkins Build Failed',
                 body: 'The Jenkins build for messaging_app failed. Please check the console output.'
        }
    }
}
