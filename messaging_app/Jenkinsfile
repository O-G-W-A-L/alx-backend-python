pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
    }

    stages {
        stage('Clone Code') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/O-G-W-A-L/alx-backend-python.git/messaging_app/',
                    credentialsId: 'github-creds'
                sh 'git branch || git rev-parse --abbrev-ref HEAD'
            }
        }

        stage('Set up Python environment') {
            steps {
                sh 'python3 -m venv $VENV_DIR'
                sh './$VENV_DIR/bin/python -m pip install --upgrade pip'
                
                sh 'pip3 install -r messaging_app/requirements.txt || pip3 install -r messaging_app/Requirements.txt'
                sh 'pip3 install pytest pytest-django'
            }
        }

        stage('Run tests with pytest') {
            steps {
                sh './$VENV_DIR/bin/pytest chats/tests.py --junitxml=report.xml'
            }
        }

        stage('Publish test report') {
            steps {
                junit 'report.xml'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'report.xml', allowEmptyArchive: true
        }
    }
}
